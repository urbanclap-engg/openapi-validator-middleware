openapi: 3.0.0
servers:
  - url: 'https://api.paymentsos.com/'
info:
  x-logo:
    url: payos_logo_blue_pad.png
    backgroundColor: white
  description: >
    # Overview

  version: 1.2.0
  title: PaymentsOS API
tags:
  - name: Tokens
    description: >-
      Tokenization is a process that safeguards sensitive card data, converting
      a card's details to a representative token.
x-tagGroups:
  - name: Reference
    tags:
      - Tokens
security:
  - app-id: []
    private-key: []
paths:
  /pets:
    post:
      summary: Create a Pet
      security:
        - public-key: []
      description: >-
      tags:
        - pets
      operationId: create-a-token
      parameters:
        - $ref: '#/components/parameters/public-key'
      responses:
        '201':
          description: pet created
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pet'
        '400':
          description: Bad request
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '401':
          description: Unauthorize
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
        '500':
          description: Internal error
          headers:
            x-zooz-request-id:
              description: request id
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_model'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/pet2'
        description: Create pet
        required: true

components:
  parameters:
    public-key:
      name: public-key
      in: header
      required: true
      example: f8948bac-8f29-4a82-8cef-704fb1e6b7ca
      schema:
        type: string
  schemas:
    error_model:
      required:
        - description
        - category
      properties:
        category:
          type: string
          description: Error code.
        description:
          type: string
          description: Error message for the developer.
        more_info:
          type: string
          description: 'More info about the error, can include link to the documentation.'
    pet:
      description: pet
      type: object
      oneOf:
        - $ref: '#/components/schemas/dog_object'
        - $ref: '#/components/schemas/cat_object'
    pet2:
      description: pet
      type: object
      oneOf:
        - $ref: '#/components/schemas/dog_object2'
        - $ref: '#/components/schemas/cat_object'
    pets:
      type: array
      items:
        $ref: "#/components/schemas/pet"
    pet-discriminator-on-child:
      description: pet
      type: object
      required:
        - pet
      properties:
        pet:
          $ref: '#/components/schemas/pet-discriminator'
    pet-discriminator:
      description: pet
      type: object
      oneOf:
        - $ref: '#/components/schemas/dog_object'
        - $ref: '#/components/schemas/cat_object'
      discriminator:
        propertyName: type
    pet-discriminator-multiple:
      description: pet
      type: object
      oneOf:
        - $ref: '#/components/schemas/dog_multiple'
        - $ref: '#/components/schemas/cat_object'
      discriminator:
        propertyName: type
      properties:
        name:
          type: string
      required:
        - name
    pet-discriminator-mapping:
      description: pet
      type: object
      oneOf:
        - $ref: '#/components/schemas/dog_multiple'
        - $ref: '#/components/schemas/cat_object'
      discriminator:
        propertyName: type
        mapping:
          mapped_dog: '#/components/schemas/dog_multiple'
          mapped_cat: '#/components/schemas/cat_object'
      properties:
        name:
          type: string
      required:
        - name
    dog_object:
      type: object
      required:
        - bark
      properties:
        bark:
          type: string
    dog_object2:
      type: object
      required:
        - bark
      properties:
        bark:
          type: string
          enum:
            - foo
            - bar
    dog_multiple:
      type: object
      required:
        - dog_age
      discriminator:
        propertyName: model
      oneOf:
        - $ref: '#/components/schemas/small_dog'
        - $ref: '#/components/schemas/big_dog'
      properties:
        dog_age:
          type: string
    cat_object:
      type: object
      required:
        - fur
      properties:
        fur:
          type: string
          pattern: '^\d+$'

    small_dog:
      type: object
      required:
        - max_length
      properties:
        max_length:
          type: string
    big_dog:
      type: object
      required:
        - min_length
      properties:
        min_length:
          type: string
    medium_dog:
      type: object
      required:
        - min_length
        - max_length
      additionalProperties: false
      properties:
        max_length:
          type: string
        min_length:
          type: string

